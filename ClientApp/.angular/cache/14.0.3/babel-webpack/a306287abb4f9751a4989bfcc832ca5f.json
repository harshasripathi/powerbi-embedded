{"ast":null,"code":"import { Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { service, factories } from 'powerbi-client'; // Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\r\n * Get JSON string representation of the given map.\r\n *\r\n * @param map Map of event and corresponding handler method\r\n *\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"reportContainer\"];\nconst _c1 = [\"embedConfig\", \"\"];\nconst _c2 = [\"dashboardContainer\"];\nconst _c3 = [\"tileContainer\"];\nconst _c4 = [\"paginatedReportContainer\"];\nconst _c5 = [\"visualContainer\"];\nconst _c6 = [\"qnaContainer\"];\n\nconst stringifyMap = map => {\n  // Return empty string for empty/null map\n  if (!map) {\n    return '';\n  } // Get entries of map as array\n\n\n  const mapEntries = Array.from(map); // Return JSON string\n\n  return JSON.stringify(mapEntries.map(mapEntry => // Convert event handler method to a string containing its source code for comparison\n  [mapEntry[0], mapEntry[1] ? mapEntry[1].toString() : '']));\n}; // SDK information to be used with service instance\n\n\nconst sdkType = 'powerbi-client-angular';\nconst sdkWrapperVersion = '2.0.1'; // Copyright (c) Microsoft Corporation.\n\n/**\r\n * Base component to hold common properties for all the Power BI entities\r\n */\n\nclass PowerBIEmbedComponent {\n  constructor() {\n    // JSON stringify of prev event handler map\n    this.prevEventHandlerMapString = '';\n  }\n\n  ngOnInit() {\n    // Initialize powerbi variable for child component\n    if (this.service) {\n      this.powerbi = this.service;\n    } else {\n      this.powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\n    }\n\n    this.powerbi.setSdkInfo(sdkType, sdkWrapperVersion);\n  }\n  /**\r\n   * Sets all event handlers from the input on the embedded entity\r\n   *\r\n   * @param embed Embedded object\r\n   * @param eventHandlerMap Array of event handlers to be set on embedded entity\r\n   * @returns void\r\n   */\n\n\n  setEventHandlers(embed, eventHandlerMap) {\n    // Get string representation of eventHandlerMap\n    const eventHandlerMapString = stringifyMap(eventHandlerMap); // Check if event handler map changed\n\n    if (this.prevEventHandlerMapString === eventHandlerMapString) {\n      return;\n    } // Update prev string representation of event handler map\n\n\n    this.prevEventHandlerMapString = eventHandlerMapString; // Apply all provided event handlers\n\n    eventHandlerMap.forEach((eventHandlerMethod, eventName) => {\n      // Removes event handler for this event\n      embed.off(eventName); // Event handler is effectively removed for this event when eventHandlerMethod is null\n\n      if (eventHandlerMethod) {\n        // Set single event handler\n        embed.on(eventName, event => {\n          eventHandlerMethod(event, embed);\n        });\n      }\n    });\n  }\n\n}\n\nPowerBIEmbedComponent.ɵfac = function PowerBIEmbedComponent_Factory(t) {\n  return new (t || PowerBIEmbedComponent)();\n};\n\nPowerBIEmbedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PowerBIEmbedComponent,\n  selectors: [[\"powerbi-embed\"]],\n  inputs: {\n    cssClassName: \"cssClassName\",\n    service: \"service\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function PowerBIEmbedComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nPowerBIEmbedComponent.propDecorators = {\n  cssClassName: [{\n    type: Input\n  }],\n  service: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-embed',\n      template: ''\n    }]\n  }], function () {\n    return [];\n  }, {\n    cssClassName: [{\n      type: Input\n    }],\n    service: [{\n      type: Input\n    }]\n  });\n})(); // Copyright (c) Microsoft Corporation.\n\n/**\r\n * Report component to embed the report, extends the Base Component\r\n */\n\n\nclass PowerBIReportEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super(); // Phased embedding flag (Optional)\n\n    this.phasedEmbedding = false;\n  } // Getter for this._embed\n\n\n  get embed() {\n    return this._embed;\n  } // Setter for this._embed\n\n\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  } // Returns embed object to calling function\n\n\n  getReport() {\n    return this._embed;\n  }\n\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue; // Check if the function is being called for the first time\n\n      if (!prevEmbedConfig) {\n        return;\n      } // Input from parent get updated, thus call embedOrUpdateReport function\n\n\n      this.embedOrUpdateReport(prevEmbedConfig);\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed, load or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedReport();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed or load the PowerBI Report based on phasedEmbedding flag\r\n   *\r\n   * @returns void\r\n   */\n\n\n  embedReport() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    } // Load when phasedEmbedding flag is true, embed otherwise\n\n\n    if (this.phasedEmbedding) {\n      this.embed = this.powerbi.load(this.containerRef.nativeElement, this.embedConfig);\n    } else {\n      this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n    }\n  }\n  /**\r\n   * When component updates, choose to _embed_ or _load_ the powerbi report\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IReportEmbedConfiguration\r\n   * @returns void\r\n   */\n\n\n  embedOrUpdateReport(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    } // Embed or load in the following scenario\n    // Embed URL is updated (E.g. New report is to be embedded)\n\n\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedReport();\n    }\n  }\n\n}\n\nPowerBIReportEmbedComponent.ɵfac = function PowerBIReportEmbedComponent_Factory(t) {\n  return new (t || PowerBIReportEmbedComponent)();\n};\n\nPowerBIReportEmbedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PowerBIReportEmbedComponent,\n  selectors: [[\"powerbi-report\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIReportEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    phasedEmbedding: \"phasedEmbedding\",\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"reportContainer\", \"\"]],\n  template: function PowerBIReportEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n\nPowerBIReportEmbedComponent.ctorParameters = () => [];\n\nPowerBIReportEmbedComponent.propDecorators = {\n  embedConfig: [{\n    type: Input\n  }],\n  phasedEmbedding: [{\n    type: Input\n  }],\n  eventHandlers: [{\n    type: Input\n  }],\n  containerRef: [{\n    type: ViewChild,\n    args: ['reportContainer']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIReportEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-report[embedConfig]',\n      template: '<div class={{cssClassName}} #reportContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    phasedEmbedding: [{\n      type: Input\n    }],\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['reportContainer']\n    }]\n  });\n})(); // Copyright (c) Microsoft Corporation.\n\n/**\r\n * Dashboard component to embed the dashboard, extends the Base component\r\n */\n\n\nclass PowerBIDashboardEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  } // Getter for this._embed\n\n\n  get embed() {\n    return this._embed;\n  } // Setter for this._embed\n\n\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  } // Returns embed object to calling function\n\n\n  getDashboard() {\n    return this.embed;\n  }\n\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue; // Check if the function is being called for the first time\n\n      if (!prevEmbedConfig) {\n        return;\n      } // Input from parent get updated, thus call embedOrUpdateDashboard function\n\n\n      this.embedOrUpdateDashboard(prevEmbedConfig);\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedDashboard();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed the PowerBI Dashboard\r\n   *\r\n   * @returns void\r\n   */\n\n\n  embedDashboard() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi dashboard\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IDashboardEmbedConfiguration\r\n   * @returns void\r\n   */\n\n\n  embedOrUpdateDashboard(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    } // Embed in the following scenario\n    // Embed URL is updated (E.g. New dashboard is to be embedded)\n\n\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedDashboard();\n    }\n  }\n\n}\n\nPowerBIDashboardEmbedComponent.ɵfac = function PowerBIDashboardEmbedComponent_Factory(t) {\n  return new (t || PowerBIDashboardEmbedComponent)();\n};\n\nPowerBIDashboardEmbedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PowerBIDashboardEmbedComponent,\n  selectors: [[\"powerbi-dashboard\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIDashboardEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"dashboardContainer\", \"\"]],\n  template: function PowerBIDashboardEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n\nPowerBIDashboardEmbedComponent.ctorParameters = () => [];\n\nPowerBIDashboardEmbedComponent.propDecorators = {\n  embedConfig: [{\n    type: Input\n  }],\n  eventHandlers: [{\n    type: Input\n  }],\n  containerRef: [{\n    type: ViewChild,\n    args: ['dashboardContainer']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIDashboardEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-dashboard[embedConfig]',\n      template: '<div class={{cssClassName}} #dashboardContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['dashboardContainer']\n    }]\n  });\n})(); // Copyright (c) Microsoft Corporation.\n\n/**\r\n * Tile component to embed the tile, extends Base component\r\n */\n\n\nclass PowerBITileEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  } // Getter for this._embed\n\n\n  get embed() {\n    return this._embed;\n  } // Setter for this._embed\n\n\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  } // Returns embed object to calling function\n\n\n  getTile() {\n    return this._embed;\n  }\n\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue; // Check if the function is being called for the first time\n\n      if (!prevEmbedConfig) {\n        return;\n      } // Input from parent get updated, thus call embedOrUpdateDashboard function\n\n\n      this.embedOrUpdateTile(prevEmbedConfig);\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedTile();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed the PowerBI Tile\r\n   *\r\n   * @returns void\r\n   */\n\n\n  embedTile() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi tile\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig ITileEmbedConfiguration\r\n   * @returns void\r\n   */\n\n\n  embedOrUpdateTile(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    } // Embed in the following scenario\n    // Embed URL is updated (E.g. New tile is to be embedded)\n\n\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedTile();\n    }\n  }\n\n}\n\nPowerBITileEmbedComponent.ɵfac = function PowerBITileEmbedComponent_Factory(t) {\n  return new (t || PowerBITileEmbedComponent)();\n};\n\nPowerBITileEmbedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PowerBITileEmbedComponent,\n  selectors: [[\"powerbi-tile\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBITileEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c3, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"tileContainer\", \"\"]],\n  template: function PowerBITileEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n\nPowerBITileEmbedComponent.ctorParameters = () => [];\n\nPowerBITileEmbedComponent.propDecorators = {\n  embedConfig: [{\n    type: Input\n  }],\n  eventHandlers: [{\n    type: Input\n  }],\n  containerRef: [{\n    type: ViewChild,\n    args: ['tileContainer']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBITileEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-tile[embedConfig]',\n      template: '<div class={{cssClassName}} #tileContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['tileContainer']\n    }]\n  });\n})(); // Copyright (c) Microsoft Corporation.\n\n/**\r\n * Paginated report component to embed the entity, extends the Base component\r\n */\n\n\nclass PowerBIPaginatedReportEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  } // Getter for this._embed\n\n\n  get embed() {\n    return this._embed;\n  } // Setter for this._embed\n\n\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  }\n\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue; // Check if the function is being called for the first time\n\n      if (!prevEmbedConfig) {\n        return;\n      } // Input from parent get updated, thus call embedOrUpdateDashboard function\n\n\n      this.embedOrUpdatedPaginatedReport(prevEmbedConfig);\n    }\n  }\n\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed\n      this.embedPaginatedReport();\n    }\n  }\n  /**\r\n   * Embed the PowerBI Paginated report\r\n   *\r\n   * @returns void\r\n   */\n\n\n  embedPaginatedReport() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    } // Embed paginated report\n\n\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi paginated report\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IEmbedConfiguration\r\n   * @returns void\r\n   */\n\n\n  embedOrUpdatedPaginatedReport(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    } // Embed in the following scenario\n    // Embed URL is updated (E.g. New paginated report is to be embedded)\n\n\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedPaginatedReport();\n    }\n  }\n\n}\n\nPowerBIPaginatedReportEmbedComponent.ɵfac = function PowerBIPaginatedReportEmbedComponent_Factory(t) {\n  return new (t || PowerBIPaginatedReportEmbedComponent)();\n};\n\nPowerBIPaginatedReportEmbedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PowerBIPaginatedReportEmbedComponent,\n  selectors: [[\"powerbi-paginated-report\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIPaginatedReportEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"paginatedReportContainer\", \"\"]],\n  template: function PowerBIPaginatedReportEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n\nPowerBIPaginatedReportEmbedComponent.ctorParameters = () => [];\n\nPowerBIPaginatedReportEmbedComponent.propDecorators = {\n  embedConfig: [{\n    type: Input\n  }],\n  containerRef: [{\n    type: ViewChild,\n    args: ['paginatedReportContainer']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIPaginatedReportEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-paginated-report[embedConfig]',\n      template: '<div class={{cssClassName}} #paginatedReportContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['paginatedReportContainer']\n    }]\n  });\n})(); // Copyright (c) Microsoft Corporation.\n\n/**\r\n * Visual component to embed the visual, extends Base component\r\n */\n\n\nclass PowerBIVisualEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  } // Getter for this._embed\n\n\n  get embed() {\n    return this._embed;\n  } // Setter for this._embed\n\n\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  } // Returns embed object to calling function\n\n\n  getVisual() {\n    return this._embed;\n  }\n\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue; // Check if the function is being called for the first time\n\n      if (!prevEmbedConfig) {\n        return;\n      } // Input from parent get updated, thus call embedOrUpdateDashboard function\n\n\n      this.embedOrUpdateVisual(prevEmbedConfig);\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedVisual();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed the PowerBI Visual\r\n   *\r\n   * @returns void\r\n   */\n\n\n  embedVisual() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi visual\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IVisualEmbedConfiguration\r\n   * @returns void\r\n   */\n\n\n  embedOrUpdateVisual(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    } // Embed in the following scenario\n    // Embed URL is updated (E.g. New visual is to be embedded)\n\n\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedVisual();\n    }\n  }\n\n}\n\nPowerBIVisualEmbedComponent.ɵfac = function PowerBIVisualEmbedComponent_Factory(t) {\n  return new (t || PowerBIVisualEmbedComponent)();\n};\n\nPowerBIVisualEmbedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PowerBIVisualEmbedComponent,\n  selectors: [[\"powerbi-visual\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIVisualEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c5, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"visualContainer\", \"\"]],\n  template: function PowerBIVisualEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n\nPowerBIVisualEmbedComponent.ctorParameters = () => [];\n\nPowerBIVisualEmbedComponent.propDecorators = {\n  embedConfig: [{\n    type: Input\n  }],\n  eventHandlers: [{\n    type: Input\n  }],\n  containerRef: [{\n    type: ViewChild,\n    args: ['visualContainer']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIVisualEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-visual[embedConfig]',\n      template: '<div class={{cssClassName}} #visualContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['visualContainer']\n    }]\n  });\n})(); // Copyright (c) Microsoft Corporation.\n\n/**\r\n * Qna component to embed the Qna visual, extends Base component\r\n */\n\n\nclass PowerBIQnaEmbedComponent extends PowerBIEmbedComponent {\n  constructor() {\n    super();\n  } // Getter for this._embed\n\n\n  get embed() {\n    return this._embed;\n  } // Setter for this._embed\n\n\n  set embed(newEmbedInstance) {\n    this._embed = newEmbedInstance;\n  } // Returns embed object to calling function\n\n\n  getQna() {\n    return this._embed;\n  }\n\n  ngOnInit() {\n    // Initialize PowerBI service instance variable from parent\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.embedConfig) {\n      const prevEmbedConfig = changes.embedConfig.previousValue; // Check if the function is being called for the first time\n\n      if (!prevEmbedConfig) {\n        return;\n      } // Input from parent get updated, thus call embedOrUpdateDashboard function\n\n\n      this.embedOrUpdateQna(prevEmbedConfig);\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n\n  ngAfterViewInit() {\n    // Check if container exists on the UI\n    if (this.containerRef.nativeElement) {\n      // Decide to embed or bootstrap\n      if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\n        this.embedQnaVisual();\n      } else {\n        this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\n      }\n    } // Set event handlers if available\n\n\n    if (this.eventHandlers && this.embed) {\n      super.setEventHandlers(this.embed, this.eventHandlers);\n    }\n  }\n  /**\r\n   * Embed the PowerBI QnA Visual\r\n   *\r\n   * @returns void\r\n   */\n\n\n  embedQnaVisual() {\n    // Check if the HTML container is rendered and available\n    if (!this.containerRef.nativeElement) {\n      return;\n    }\n\n    this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\n  }\n  /**\r\n   * When component updates, choose to _embed_ the powerbi qna visual\r\n   * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n   *\r\n   * @param prevEmbedConfig IQnaEmbedConfiguration\r\n   * @returns void\r\n   */\n\n\n  embedOrUpdateQna(prevEmbedConfig) {\n    // Check if Embed URL and Access Token are present in current properties\n    if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\n      return;\n    } // Embed in the following scenario\n    // Embed URL is updated (E.g. New Qna visual is to be embedded)\n\n\n    if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\n      this.embedQnaVisual();\n    }\n  }\n\n}\n\nPowerBIQnaEmbedComponent.ɵfac = function PowerBIQnaEmbedComponent_Factory(t) {\n  return new (t || PowerBIQnaEmbedComponent)();\n};\n\nPowerBIQnaEmbedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PowerBIQnaEmbedComponent,\n  selectors: [[\"powerbi-qna\", \"embedConfig\", \"\"]],\n  viewQuery: function PowerBIQnaEmbedComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c6, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    embedConfig: \"embedConfig\",\n    eventHandlers: \"eventHandlers\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c1,\n  decls: 2,\n  vars: 3,\n  consts: [[\"qnaContainer\", \"\"]],\n  template: function PowerBIQnaEmbedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    }\n  },\n  encapsulation: 2\n});\n\nPowerBIQnaEmbedComponent.ctorParameters = () => [];\n\nPowerBIQnaEmbedComponent.propDecorators = {\n  embedConfig: [{\n    type: Input\n  }],\n  eventHandlers: [{\n    type: Input\n  }],\n  containerRef: [{\n    type: ViewChild,\n    args: ['qnaContainer']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIQnaEmbedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'powerbi-qna[embedConfig]',\n      template: '<div class={{cssClassName}} #qnaContainer></div>'\n    }]\n  }], function () {\n    return [];\n  }, {\n    embedConfig: [{\n      type: Input\n    }],\n    eventHandlers: [{\n      type: Input\n    }],\n    containerRef: [{\n      type: ViewChild,\n      args: ['qnaContainer']\n    }]\n  });\n})(); // Copyright (c) Microsoft Corporation.\n\n\nclass PowerBIEmbedModule {}\n\nPowerBIEmbedModule.ɵfac = function PowerBIEmbedModule_Factory(t) {\n  return new (t || PowerBIEmbedModule)();\n};\n\nPowerBIEmbedModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: PowerBIEmbedModule\n});\nPowerBIEmbedModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIEmbedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [PowerBIEmbedComponent, PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent],\n      imports: [],\n      exports: [PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PowerBIEmbedModule, {\n    declarations: [PowerBIEmbedComponent, PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent],\n    exports: [PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent]\n  });\n})(); // Copyright (c) Microsoft Corporation.\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { PowerBIDashboardEmbedComponent, PowerBIEmbedModule, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent, PowerBIEmbedComponent as ɵa };","map":{"version":3,"names":["Component","Input","ViewChild","NgModule","service","factories","ɵngcc0","_c0","_c1","_c2","_c3","_c4","_c5","_c6","stringifyMap","map","mapEntries","Array","from","JSON","stringify","mapEntry","toString","sdkType","sdkWrapperVersion","PowerBIEmbedComponent","constructor","prevEventHandlerMapString","ngOnInit","powerbi","Service","hpmFactory","wpmpFactory","routerFactory","setSdkInfo","setEventHandlers","embed","eventHandlerMap","eventHandlerMapString","forEach","eventHandlerMethod","eventName","off","on","event","ɵfac","PowerBIEmbedComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","cssClassName","decls","vars","template","PowerBIEmbedComponent_Template","rf","ctx","encapsulation","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","PowerBIReportEmbedComponent","phasedEmbedding","_embed","newEmbedInstance","getReport","ngOnChanges","changes","embedConfig","prevEmbedConfig","previousValue","embedOrUpdateReport","eventHandlers","ngAfterViewInit","containerRef","nativeElement","accessToken","embedUrl","embedReport","bootstrap","load","PowerBIReportEmbedComponent_Factory","viewQuery","PowerBIReportEmbedComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","attrs","consts","PowerBIReportEmbedComponent_Template","ɵɵelement","ɵɵclassMap","ctorParameters","PowerBIDashboardEmbedComponent","getDashboard","embedOrUpdateDashboard","embedDashboard","PowerBIDashboardEmbedComponent_Factory","PowerBIDashboardEmbedComponent_Query","PowerBIDashboardEmbedComponent_Template","PowerBITileEmbedComponent","getTile","embedOrUpdateTile","embedTile","PowerBITileEmbedComponent_Factory","PowerBITileEmbedComponent_Query","PowerBITileEmbedComponent_Template","PowerBIPaginatedReportEmbedComponent","embedOrUpdatedPaginatedReport","embedPaginatedReport","PowerBIPaginatedReportEmbedComponent_Factory","PowerBIPaginatedReportEmbedComponent_Query","PowerBIPaginatedReportEmbedComponent_Template","PowerBIVisualEmbedComponent","getVisual","embedOrUpdateVisual","embedVisual","PowerBIVisualEmbedComponent_Factory","PowerBIVisualEmbedComponent_Query","PowerBIVisualEmbedComponent_Template","PowerBIQnaEmbedComponent","getQna","embedOrUpdateQna","embedQnaVisual","PowerBIQnaEmbedComponent_Factory","PowerBIQnaEmbedComponent_Query","PowerBIQnaEmbedComponent_Template","PowerBIEmbedModule","PowerBIEmbedModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","imports","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa"],"sources":["/Users/harshasripathi/Projects/powerbi-embedded-ui/ClientApp/node_modules/powerbi-client-angular/__ivy_ngcc__/fesm2015/powerbi-client-angular.js"],"sourcesContent":["import { Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { service, factories } from 'powerbi-client';\n\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n/**\r\n * Get JSON string representation of the given map.\r\n *\r\n * @param map Map of event and corresponding handler method\r\n *\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"reportContainer\"];\nconst _c1 = [\"embedConfig\", \"\"];\nconst _c2 = [\"dashboardContainer\"];\nconst _c3 = [\"tileContainer\"];\nconst _c4 = [\"paginatedReportContainer\"];\nconst _c5 = [\"visualContainer\"];\nconst _c6 = [\"qnaContainer\"];\nconst stringifyMap = (map) => {\r\n    // Return empty string for empty/null map\r\n    if (!map) {\r\n        return '';\r\n    }\r\n    // Get entries of map as array\r\n    const mapEntries = Array.from(map);\r\n    // Return JSON string\r\n    return JSON.stringify(mapEntries.map((mapEntry) => \r\n    // Convert event handler method to a string containing its source code for comparison\r\n    [mapEntry[0], mapEntry[1] ? mapEntry[1].toString() : '']));\r\n};\r\n// SDK information to be used with service instance\r\nconst sdkType = 'powerbi-client-angular';\r\nconst sdkWrapperVersion = '2.0.1';\n\n// Copyright (c) Microsoft Corporation.\r\n/**\r\n * Base component to hold common properties for all the Power BI entities\r\n */\r\nclass PowerBIEmbedComponent {\r\n    constructor() {\r\n        // JSON stringify of prev event handler map\r\n        this.prevEventHandlerMapString = '';\r\n    }\r\n    ngOnInit() {\r\n        // Initialize powerbi variable for child component\r\n        if (this.service) {\r\n            this.powerbi = this.service;\r\n        }\r\n        else {\r\n            this.powerbi = new service.Service(factories.hpmFactory, factories.wpmpFactory, factories.routerFactory);\r\n        }\r\n        this.powerbi.setSdkInfo(sdkType, sdkWrapperVersion);\r\n    }\r\n    /**\r\n     * Sets all event handlers from the input on the embedded entity\r\n     *\r\n     * @param embed Embedded object\r\n     * @param eventHandlerMap Array of event handlers to be set on embedded entity\r\n     * @returns void\r\n     */\r\n    setEventHandlers(embed, eventHandlerMap) {\r\n        // Get string representation of eventHandlerMap\r\n        const eventHandlerMapString = stringifyMap(eventHandlerMap);\r\n        // Check if event handler map changed\r\n        if (this.prevEventHandlerMapString === eventHandlerMapString) {\r\n            return;\r\n        }\r\n        // Update prev string representation of event handler map\r\n        this.prevEventHandlerMapString = eventHandlerMapString;\r\n        // Apply all provided event handlers\r\n        eventHandlerMap.forEach((eventHandlerMethod, eventName) => {\r\n            // Removes event handler for this event\r\n            embed.off(eventName);\r\n            // Event handler is effectively removed for this event when eventHandlerMethod is null\r\n            if (eventHandlerMethod) {\r\n                // Set single event handler\r\n                embed.on(eventName, (event) => {\r\n                    eventHandlerMethod(event, embed);\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\nPowerBIEmbedComponent.ɵfac = function PowerBIEmbedComponent_Factory(t) { return new (t || PowerBIEmbedComponent)(); };\nPowerBIEmbedComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PowerBIEmbedComponent, selectors: [[\"powerbi-embed\"]], inputs: { cssClassName: \"cssClassName\", service: \"service\" }, decls: 0, vars: 0, template: function PowerBIEmbedComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\nPowerBIEmbedComponent.propDecorators = {\r\n    cssClassName: [{ type: Input }],\r\n    service: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIEmbedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'powerbi-embed',\n                template: ''\n            }]\n    }], function () { return []; }, { cssClassName: [{\n            type: Input\n        }], service: [{\n            type: Input\n        }] }); })();\n\n// Copyright (c) Microsoft Corporation.\r\n/**\r\n * Report component to embed the report, extends the Base Component\r\n */\r\nclass PowerBIReportEmbedComponent extends PowerBIEmbedComponent {\r\n    constructor() {\r\n        super();\r\n        // Phased embedding flag (Optional)\r\n        this.phasedEmbedding = false;\r\n    }\r\n    // Getter for this._embed\r\n    get embed() {\r\n        return this._embed;\r\n    }\r\n    // Setter for this._embed\r\n    set embed(newEmbedInstance) {\r\n        this._embed = newEmbedInstance;\r\n    }\r\n    // Returns embed object to calling function\r\n    getReport() {\r\n        return this._embed;\r\n    }\r\n    ngOnInit() {\r\n        // Initialize PowerBI service instance variable from parent\r\n        super.ngOnInit();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.embedConfig) {\r\n            const prevEmbedConfig = changes.embedConfig.previousValue;\r\n            // Check if the function is being called for the first time\r\n            if (!prevEmbedConfig) {\r\n                return;\r\n            }\r\n            // Input from parent get updated, thus call embedOrUpdateReport function\r\n            this.embedOrUpdateReport(prevEmbedConfig);\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // Check if container exists on the UI\r\n        if (this.containerRef.nativeElement) {\r\n            // Decide to embed, load or bootstrap\r\n            if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n                this.embedReport();\r\n            }\r\n            else {\r\n                this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n            }\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    /**\r\n     * Embed or load the PowerBI Report based on phasedEmbedding flag\r\n     *\r\n     * @returns void\r\n     */\r\n    embedReport() {\r\n        // Check if the HTML container is rendered and available\r\n        if (!this.containerRef.nativeElement) {\r\n            return;\r\n        }\r\n        // Load when phasedEmbedding flag is true, embed otherwise\r\n        if (this.phasedEmbedding) {\r\n            this.embed = this.powerbi.load(this.containerRef.nativeElement, this.embedConfig);\r\n        }\r\n        else {\r\n            this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n        }\r\n    }\r\n    /**\r\n     * When component updates, choose to _embed_ or _load_ the powerbi report\r\n     * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n     *\r\n     * @param prevEmbedConfig IReportEmbedConfiguration\r\n     * @returns void\r\n     */\r\n    embedOrUpdateReport(prevEmbedConfig) {\r\n        // Check if Embed URL and Access Token are present in current properties\r\n        if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n            return;\r\n        }\r\n        // Embed or load in the following scenario\r\n        // Embed URL is updated (E.g. New report is to be embedded)\r\n        if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n            this.embedReport();\r\n        }\r\n    }\r\n}\nPowerBIReportEmbedComponent.ɵfac = function PowerBIReportEmbedComponent_Factory(t) { return new (t || PowerBIReportEmbedComponent)(); };\nPowerBIReportEmbedComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PowerBIReportEmbedComponent, selectors: [[\"powerbi-report\", \"embedConfig\", \"\"]], viewQuery: function PowerBIReportEmbedComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    } }, inputs: { phasedEmbedding: \"phasedEmbedding\", embedConfig: \"embedConfig\", eventHandlers: \"eventHandlers\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c1, decls: 2, vars: 3, consts: [[\"reportContainer\", \"\"]], template: function PowerBIReportEmbedComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    } }, encapsulation: 2 });\r\nPowerBIReportEmbedComponent.ctorParameters = () => [];\r\nPowerBIReportEmbedComponent.propDecorators = {\r\n    embedConfig: [{ type: Input }],\r\n    phasedEmbedding: [{ type: Input }],\r\n    eventHandlers: [{ type: Input }],\r\n    containerRef: [{ type: ViewChild, args: ['reportContainer',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIReportEmbedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'powerbi-report[embedConfig]',\n                template: '<div class={{cssClassName}} #reportContainer></div>'\n            }]\n    }], function () { return []; }, { phasedEmbedding: [{\n            type: Input\n        }], embedConfig: [{\n            type: Input\n        }], eventHandlers: [{\n            type: Input\n        }], containerRef: [{\n            type: ViewChild,\n            args: ['reportContainer']\n        }] }); })();\n\n// Copyright (c) Microsoft Corporation.\r\n/**\r\n * Dashboard component to embed the dashboard, extends the Base component\r\n */\r\nclass PowerBIDashboardEmbedComponent extends PowerBIEmbedComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    // Getter for this._embed\r\n    get embed() {\r\n        return this._embed;\r\n    }\r\n    // Setter for this._embed\r\n    set embed(newEmbedInstance) {\r\n        this._embed = newEmbedInstance;\r\n    }\r\n    // Returns embed object to calling function\r\n    getDashboard() {\r\n        return this.embed;\r\n    }\r\n    ngOnInit() {\r\n        // Initialize PowerBI service instance variable from parent\r\n        super.ngOnInit();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.embedConfig) {\r\n            const prevEmbedConfig = changes.embedConfig.previousValue;\r\n            // Check if the function is being called for the first time\r\n            if (!prevEmbedConfig) {\r\n                return;\r\n            }\r\n            // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n            this.embedOrUpdateDashboard(prevEmbedConfig);\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // Check if container exists on the UI\r\n        if (this.containerRef.nativeElement) {\r\n            // Decide to embed or bootstrap\r\n            if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n                this.embedDashboard();\r\n            }\r\n            else {\r\n                this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n            }\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    /**\r\n     * Embed the PowerBI Dashboard\r\n     *\r\n     * @returns void\r\n     */\r\n    embedDashboard() {\r\n        // Check if the HTML container is rendered and available\r\n        if (!this.containerRef.nativeElement) {\r\n            return;\r\n        }\r\n        this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n    }\r\n    /**\r\n     * When component updates, choose to _embed_ the powerbi dashboard\r\n     * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n     *\r\n     * @param prevEmbedConfig IDashboardEmbedConfiguration\r\n     * @returns void\r\n     */\r\n    embedOrUpdateDashboard(prevEmbedConfig) {\r\n        // Check if Embed URL and Access Token are present in current properties\r\n        if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n            return;\r\n        }\r\n        // Embed in the following scenario\r\n        // Embed URL is updated (E.g. New dashboard is to be embedded)\r\n        if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n            this.embedDashboard();\r\n        }\r\n    }\r\n}\nPowerBIDashboardEmbedComponent.ɵfac = function PowerBIDashboardEmbedComponent_Factory(t) { return new (t || PowerBIDashboardEmbedComponent)(); };\nPowerBIDashboardEmbedComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PowerBIDashboardEmbedComponent, selectors: [[\"powerbi-dashboard\", \"embedConfig\", \"\"]], viewQuery: function PowerBIDashboardEmbedComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    } }, inputs: { embedConfig: \"embedConfig\", eventHandlers: \"eventHandlers\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c1, decls: 2, vars: 3, consts: [[\"dashboardContainer\", \"\"]], template: function PowerBIDashboardEmbedComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    } }, encapsulation: 2 });\r\nPowerBIDashboardEmbedComponent.ctorParameters = () => [];\r\nPowerBIDashboardEmbedComponent.propDecorators = {\r\n    embedConfig: [{ type: Input }],\r\n    eventHandlers: [{ type: Input }],\r\n    containerRef: [{ type: ViewChild, args: ['dashboardContainer',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIDashboardEmbedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'powerbi-dashboard[embedConfig]',\n                template: '<div class={{cssClassName}} #dashboardContainer></div>'\n            }]\n    }], function () { return []; }, { embedConfig: [{\n            type: Input\n        }], eventHandlers: [{\n            type: Input\n        }], containerRef: [{\n            type: ViewChild,\n            args: ['dashboardContainer']\n        }] }); })();\n\n// Copyright (c) Microsoft Corporation.\r\n/**\r\n * Tile component to embed the tile, extends Base component\r\n */\r\nclass PowerBITileEmbedComponent extends PowerBIEmbedComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    // Getter for this._embed\r\n    get embed() {\r\n        return this._embed;\r\n    }\r\n    // Setter for this._embed\r\n    set embed(newEmbedInstance) {\r\n        this._embed = newEmbedInstance;\r\n    }\r\n    // Returns embed object to calling function\r\n    getTile() {\r\n        return this._embed;\r\n    }\r\n    ngOnInit() {\r\n        // Initialize PowerBI service instance variable from parent\r\n        super.ngOnInit();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.embedConfig) {\r\n            const prevEmbedConfig = changes.embedConfig.previousValue;\r\n            // Check if the function is being called for the first time\r\n            if (!prevEmbedConfig) {\r\n                return;\r\n            }\r\n            // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n            this.embedOrUpdateTile(prevEmbedConfig);\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // Check if container exists on the UI\r\n        if (this.containerRef.nativeElement) {\r\n            // Decide to embed or bootstrap\r\n            if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n                this.embedTile();\r\n            }\r\n            else {\r\n                this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n            }\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    /**\r\n     * Embed the PowerBI Tile\r\n     *\r\n     * @returns void\r\n     */\r\n    embedTile() {\r\n        // Check if the HTML container is rendered and available\r\n        if (!this.containerRef.nativeElement) {\r\n            return;\r\n        }\r\n        this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n    }\r\n    /**\r\n     * When component updates, choose to _embed_ the powerbi tile\r\n     * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n     *\r\n     * @param prevEmbedConfig ITileEmbedConfiguration\r\n     * @returns void\r\n     */\r\n    embedOrUpdateTile(prevEmbedConfig) {\r\n        // Check if Embed URL and Access Token are present in current properties\r\n        if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n            return;\r\n        }\r\n        // Embed in the following scenario\r\n        // Embed URL is updated (E.g. New tile is to be embedded)\r\n        if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n            this.embedTile();\r\n        }\r\n    }\r\n}\nPowerBITileEmbedComponent.ɵfac = function PowerBITileEmbedComponent_Factory(t) { return new (t || PowerBITileEmbedComponent)(); };\nPowerBITileEmbedComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PowerBITileEmbedComponent, selectors: [[\"powerbi-tile\", \"embedConfig\", \"\"]], viewQuery: function PowerBITileEmbedComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    } }, inputs: { embedConfig: \"embedConfig\", eventHandlers: \"eventHandlers\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c1, decls: 2, vars: 3, consts: [[\"tileContainer\", \"\"]], template: function PowerBITileEmbedComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    } }, encapsulation: 2 });\r\nPowerBITileEmbedComponent.ctorParameters = () => [];\r\nPowerBITileEmbedComponent.propDecorators = {\r\n    embedConfig: [{ type: Input }],\r\n    eventHandlers: [{ type: Input }],\r\n    containerRef: [{ type: ViewChild, args: ['tileContainer',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBITileEmbedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'powerbi-tile[embedConfig]',\n                template: '<div class={{cssClassName}} #tileContainer></div>'\n            }]\n    }], function () { return []; }, { embedConfig: [{\n            type: Input\n        }], eventHandlers: [{\n            type: Input\n        }], containerRef: [{\n            type: ViewChild,\n            args: ['tileContainer']\n        }] }); })();\n\n// Copyright (c) Microsoft Corporation.\r\n/**\r\n * Paginated report component to embed the entity, extends the Base component\r\n */\r\nclass PowerBIPaginatedReportEmbedComponent extends PowerBIEmbedComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    // Getter for this._embed\r\n    get embed() {\r\n        return this._embed;\r\n    }\r\n    // Setter for this._embed\r\n    set embed(newEmbedInstance) {\r\n        this._embed = newEmbedInstance;\r\n    }\r\n    ngOnInit() {\r\n        // Initialize PowerBI service instance variable from parent\r\n        super.ngOnInit();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.embedConfig) {\r\n            const prevEmbedConfig = changes.embedConfig.previousValue;\r\n            // Check if the function is being called for the first time\r\n            if (!prevEmbedConfig) {\r\n                return;\r\n            }\r\n            // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n            this.embedOrUpdatedPaginatedReport(prevEmbedConfig);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // Check if container exists on the UI\r\n        if (this.containerRef.nativeElement) {\r\n            // Decide to embed\r\n            this.embedPaginatedReport();\r\n        }\r\n    }\r\n    /**\r\n     * Embed the PowerBI Paginated report\r\n     *\r\n     * @returns void\r\n     */\r\n    embedPaginatedReport() {\r\n        // Check if the HTML container is rendered and available\r\n        if (!this.containerRef.nativeElement) {\r\n            return;\r\n        }\r\n        // Embed paginated report\r\n        this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n    }\r\n    /**\r\n     * When component updates, choose to _embed_ the powerbi paginated report\r\n     * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n     *\r\n     * @param prevEmbedConfig IEmbedConfiguration\r\n     * @returns void\r\n     */\r\n    embedOrUpdatedPaginatedReport(prevEmbedConfig) {\r\n        // Check if Embed URL and Access Token are present in current properties\r\n        if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n            return;\r\n        }\r\n        // Embed in the following scenario\r\n        // Embed URL is updated (E.g. New paginated report is to be embedded)\r\n        if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n            this.embedPaginatedReport();\r\n        }\r\n    }\r\n}\nPowerBIPaginatedReportEmbedComponent.ɵfac = function PowerBIPaginatedReportEmbedComponent_Factory(t) { return new (t || PowerBIPaginatedReportEmbedComponent)(); };\nPowerBIPaginatedReportEmbedComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PowerBIPaginatedReportEmbedComponent, selectors: [[\"powerbi-paginated-report\", \"embedConfig\", \"\"]], viewQuery: function PowerBIPaginatedReportEmbedComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    } }, inputs: { embedConfig: \"embedConfig\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c1, decls: 2, vars: 3, consts: [[\"paginatedReportContainer\", \"\"]], template: function PowerBIPaginatedReportEmbedComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    } }, encapsulation: 2 });\r\nPowerBIPaginatedReportEmbedComponent.ctorParameters = () => [];\r\nPowerBIPaginatedReportEmbedComponent.propDecorators = {\r\n    embedConfig: [{ type: Input }],\r\n    containerRef: [{ type: ViewChild, args: ['paginatedReportContainer',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIPaginatedReportEmbedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'powerbi-paginated-report[embedConfig]',\n                template: '<div class={{cssClassName}} #paginatedReportContainer></div>'\n            }]\n    }], function () { return []; }, { embedConfig: [{\n            type: Input\n        }], containerRef: [{\n            type: ViewChild,\n            args: ['paginatedReportContainer']\n        }] }); })();\n\n// Copyright (c) Microsoft Corporation.\r\n/**\r\n * Visual component to embed the visual, extends Base component\r\n */\r\nclass PowerBIVisualEmbedComponent extends PowerBIEmbedComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    // Getter for this._embed\r\n    get embed() {\r\n        return this._embed;\r\n    }\r\n    // Setter for this._embed\r\n    set embed(newEmbedInstance) {\r\n        this._embed = newEmbedInstance;\r\n    }\r\n    // Returns embed object to calling function\r\n    getVisual() {\r\n        return this._embed;\r\n    }\r\n    ngOnInit() {\r\n        // Initialize PowerBI service instance variable from parent\r\n        super.ngOnInit();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.embedConfig) {\r\n            const prevEmbedConfig = changes.embedConfig.previousValue;\r\n            // Check if the function is being called for the first time\r\n            if (!prevEmbedConfig) {\r\n                return;\r\n            }\r\n            // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n            this.embedOrUpdateVisual(prevEmbedConfig);\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // Check if container exists on the UI\r\n        if (this.containerRef.nativeElement) {\r\n            // Decide to embed or bootstrap\r\n            if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n                this.embedVisual();\r\n            }\r\n            else {\r\n                this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n            }\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    /**\r\n     * Embed the PowerBI Visual\r\n     *\r\n     * @returns void\r\n     */\r\n    embedVisual() {\r\n        // Check if the HTML container is rendered and available\r\n        if (!this.containerRef.nativeElement) {\r\n            return;\r\n        }\r\n        this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n    }\r\n    /**\r\n     * When component updates, choose to _embed_ the powerbi visual\r\n     * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n     *\r\n     * @param prevEmbedConfig IVisualEmbedConfiguration\r\n     * @returns void\r\n     */\r\n    embedOrUpdateVisual(prevEmbedConfig) {\r\n        // Check if Embed URL and Access Token are present in current properties\r\n        if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n            return;\r\n        }\r\n        // Embed in the following scenario\r\n        // Embed URL is updated (E.g. New visual is to be embedded)\r\n        if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n            this.embedVisual();\r\n        }\r\n    }\r\n}\nPowerBIVisualEmbedComponent.ɵfac = function PowerBIVisualEmbedComponent_Factory(t) { return new (t || PowerBIVisualEmbedComponent)(); };\nPowerBIVisualEmbedComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PowerBIVisualEmbedComponent, selectors: [[\"powerbi-visual\", \"embedConfig\", \"\"]], viewQuery: function PowerBIVisualEmbedComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c5, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    } }, inputs: { embedConfig: \"embedConfig\", eventHandlers: \"eventHandlers\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c1, decls: 2, vars: 3, consts: [[\"visualContainer\", \"\"]], template: function PowerBIVisualEmbedComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    } }, encapsulation: 2 });\r\nPowerBIVisualEmbedComponent.ctorParameters = () => [];\r\nPowerBIVisualEmbedComponent.propDecorators = {\r\n    embedConfig: [{ type: Input }],\r\n    eventHandlers: [{ type: Input }],\r\n    containerRef: [{ type: ViewChild, args: ['visualContainer',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIVisualEmbedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'powerbi-visual[embedConfig]',\n                template: '<div class={{cssClassName}} #visualContainer></div>'\n            }]\n    }], function () { return []; }, { embedConfig: [{\n            type: Input\n        }], eventHandlers: [{\n            type: Input\n        }], containerRef: [{\n            type: ViewChild,\n            args: ['visualContainer']\n        }] }); })();\n\n// Copyright (c) Microsoft Corporation.\r\n/**\r\n * Qna component to embed the Qna visual, extends Base component\r\n */\r\nclass PowerBIQnaEmbedComponent extends PowerBIEmbedComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    // Getter for this._embed\r\n    get embed() {\r\n        return this._embed;\r\n    }\r\n    // Setter for this._embed\r\n    set embed(newEmbedInstance) {\r\n        this._embed = newEmbedInstance;\r\n    }\r\n    // Returns embed object to calling function\r\n    getQna() {\r\n        return this._embed;\r\n    }\r\n    ngOnInit() {\r\n        // Initialize PowerBI service instance variable from parent\r\n        super.ngOnInit();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.embedConfig) {\r\n            const prevEmbedConfig = changes.embedConfig.previousValue;\r\n            // Check if the function is being called for the first time\r\n            if (!prevEmbedConfig) {\r\n                return;\r\n            }\r\n            // Input from parent get updated, thus call embedOrUpdateDashboard function\r\n            this.embedOrUpdateQna(prevEmbedConfig);\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // Check if container exists on the UI\r\n        if (this.containerRef.nativeElement) {\r\n            // Decide to embed or bootstrap\r\n            if (this.embedConfig.accessToken && this.embedConfig.embedUrl) {\r\n                this.embedQnaVisual();\r\n            }\r\n            else {\r\n                this.embed = this.powerbi.bootstrap(this.containerRef.nativeElement, this.embedConfig);\r\n            }\r\n        }\r\n        // Set event handlers if available\r\n        if (this.eventHandlers && this.embed) {\r\n            super.setEventHandlers(this.embed, this.eventHandlers);\r\n        }\r\n    }\r\n    /**\r\n     * Embed the PowerBI QnA Visual\r\n     *\r\n     * @returns void\r\n     */\r\n    embedQnaVisual() {\r\n        // Check if the HTML container is rendered and available\r\n        if (!this.containerRef.nativeElement) {\r\n            return;\r\n        }\r\n        this.embed = this.powerbi.embed(this.containerRef.nativeElement, this.embedConfig);\r\n    }\r\n    /**\r\n     * When component updates, choose to _embed_ the powerbi qna visual\r\n     * or do nothing if the embedUrl and accessToken did not update in the new properties\r\n     *\r\n     * @param prevEmbedConfig IQnaEmbedConfiguration\r\n     * @returns void\r\n     */\r\n    embedOrUpdateQna(prevEmbedConfig) {\r\n        // Check if Embed URL and Access Token are present in current properties\r\n        if (!this.embedConfig.accessToken || !this.embedConfig.embedUrl) {\r\n            return;\r\n        }\r\n        // Embed in the following scenario\r\n        // Embed URL is updated (E.g. New Qna visual is to be embedded)\r\n        if (this.containerRef.nativeElement && this.embedConfig.embedUrl !== prevEmbedConfig.embedUrl) {\r\n            this.embedQnaVisual();\r\n        }\r\n    }\r\n}\nPowerBIQnaEmbedComponent.ɵfac = function PowerBIQnaEmbedComponent_Factory(t) { return new (t || PowerBIQnaEmbedComponent)(); };\nPowerBIQnaEmbedComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PowerBIQnaEmbedComponent, selectors: [[\"powerbi-qna\", \"embedConfig\", \"\"]], viewQuery: function PowerBIQnaEmbedComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c6, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    } }, inputs: { embedConfig: \"embedConfig\", eventHandlers: \"eventHandlers\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c1, decls: 2, vars: 3, consts: [[\"qnaContainer\", \"\"]], template: function PowerBIQnaEmbedComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClassName);\n    } }, encapsulation: 2 });\r\nPowerBIQnaEmbedComponent.ctorParameters = () => [];\r\nPowerBIQnaEmbedComponent.propDecorators = {\r\n    embedConfig: [{ type: Input }],\r\n    eventHandlers: [{ type: Input }],\r\n    containerRef: [{ type: ViewChild, args: ['qnaContainer',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIQnaEmbedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'powerbi-qna[embedConfig]',\n                template: '<div class={{cssClassName}} #qnaContainer></div>'\n            }]\n    }], function () { return []; }, { embedConfig: [{\n            type: Input\n        }], eventHandlers: [{\n            type: Input\n        }], containerRef: [{\n            type: ViewChild,\n            args: ['qnaContainer']\n        }] }); })();\n\n// Copyright (c) Microsoft Corporation.\r\nclass PowerBIEmbedModule {\r\n}\nPowerBIEmbedModule.ɵfac = function PowerBIEmbedModule_Factory(t) { return new (t || PowerBIEmbedModule)(); };\nPowerBIEmbedModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PowerBIEmbedModule });\nPowerBIEmbedModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PowerBIEmbedModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    PowerBIEmbedComponent,\n                    PowerBIDashboardEmbedComponent,\n                    PowerBIPaginatedReportEmbedComponent,\n                    PowerBIQnaEmbedComponent,\n                    PowerBIReportEmbedComponent,\n                    PowerBITileEmbedComponent,\n                    PowerBIVisualEmbedComponent,\n                ],\n                imports: [],\n                exports: [\n                    PowerBIDashboardEmbedComponent,\n                    PowerBIPaginatedReportEmbedComponent,\n                    PowerBIQnaEmbedComponent,\n                    PowerBIReportEmbedComponent,\n                    PowerBITileEmbedComponent,\n                    PowerBIVisualEmbedComponent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PowerBIEmbedModule, { declarations: [PowerBIEmbedComponent, PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent], exports: [PowerBIDashboardEmbedComponent, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent] }); })();\n\n// Copyright (c) Microsoft Corporation.\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { PowerBIDashboardEmbedComponent, PowerBIEmbedModule, PowerBIPaginatedReportEmbedComponent, PowerBIQnaEmbedComponent, PowerBIReportEmbedComponent, PowerBITileEmbedComponent, PowerBIVisualEmbedComponent, PowerBIEmbedComponent as ɵa };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}